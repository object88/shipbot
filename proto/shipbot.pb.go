// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shipbot.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListClustersRequest struct {
	Filter               string   `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClustersRequest) Reset()         { *m = ListClustersRequest{} }
func (m *ListClustersRequest) String() string { return proto.CompactTextString(m) }
func (*ListClustersRequest) ProtoMessage()    {}
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d9377115389d8bf, []int{0}
}

func (m *ListClustersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClustersRequest.Unmarshal(m, b)
}
func (m *ListClustersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClustersRequest.Marshal(b, m, deterministic)
}
func (m *ListClustersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClustersRequest.Merge(m, src)
}
func (m *ListClustersRequest) XXX_Size() int {
	return xxx_messageInfo_ListClustersRequest.Size(m)
}
func (m *ListClustersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClustersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListClustersRequest proto.InternalMessageInfo

func (m *ListClustersRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

type ListClustersResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClustersResponse) Reset()         { *m = ListClustersResponse{} }
func (m *ListClustersResponse) String() string { return proto.CompactTextString(m) }
func (*ListClustersResponse) ProtoMessage()    {}
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d9377115389d8bf, []int{1}
}

func (m *ListClustersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClustersResponse.Unmarshal(m, b)
}
func (m *ListClustersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClustersResponse.Marshal(b, m, deterministic)
}
func (m *ListClustersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClustersResponse.Merge(m, src)
}
func (m *ListClustersResponse) XXX_Size() int {
	return xxx_messageInfo_ListClustersResponse.Size(m)
}
func (m *ListClustersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClustersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListClustersResponse proto.InternalMessageInfo

func (m *ListClustersResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ListClustersRequest)(nil), "proto.ListClustersRequest")
	proto.RegisterType((*ListClustersResponse)(nil), "proto.ListClustersResponse")
}

func init() { proto.RegisterFile("shipbot.proto", fileDescriptor_0d9377115389d8bf) }

var fileDescriptor_0d9377115389d8bf = []byte{
	// 144 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0xce, 0xc8, 0x2c,
	0x48, 0xca, 0x2f, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xba, 0x5c,
	0xc2, 0x3e, 0x99, 0xc5, 0x25, 0xce, 0x39, 0xa5, 0xc5, 0x25, 0xa9, 0x45, 0xc5, 0x41, 0xa9, 0x85,
	0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x62, 0x5c, 0x6c, 0x69, 0x99, 0x39, 0x25, 0xa9, 0x45, 0x12, 0x8c,
	0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x50, 0x9e, 0x92, 0x16, 0x97, 0x08, 0xaa, 0xf2, 0xe2, 0x82, 0xfc,
	0xbc, 0xe2, 0x54, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0xa8, 0x6a, 0x30, 0xdb, 0x28,
	0x8c, 0x8b, 0x3d, 0x18, 0x62, 0xa5, 0x90, 0x37, 0x17, 0x0f, 0xb2, 0x36, 0x21, 0x29, 0x88, 0x23,
	0xf4, 0xb0, 0x58, 0x2d, 0x25, 0x8d, 0x55, 0x0e, 0x62, 0x8f, 0x12, 0x83, 0x01, 0x63, 0x12, 0x1b,
	0x58, 0xde, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x94, 0x3f, 0x02, 0xd1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShipbotClient is the client API for Shipbot service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShipbotClient interface {
	ListClusters(ctx context.Context, in *ListClustersRequest, opts ...grpc.CallOption) (Shipbot_ListClustersClient, error)
}

type shipbotClient struct {
	cc *grpc.ClientConn
}

func NewShipbotClient(cc *grpc.ClientConn) ShipbotClient {
	return &shipbotClient{cc}
}

func (c *shipbotClient) ListClusters(ctx context.Context, in *ListClustersRequest, opts ...grpc.CallOption) (Shipbot_ListClustersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Shipbot_serviceDesc.Streams[0], "/proto.Shipbot/ListClusters", opts...)
	if err != nil {
		return nil, err
	}
	x := &shipbotListClustersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Shipbot_ListClustersClient interface {
	Recv() (*ListClustersResponse, error)
	grpc.ClientStream
}

type shipbotListClustersClient struct {
	grpc.ClientStream
}

func (x *shipbotListClustersClient) Recv() (*ListClustersResponse, error) {
	m := new(ListClustersResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ShipbotServer is the server API for Shipbot service.
type ShipbotServer interface {
	ListClusters(*ListClustersRequest, Shipbot_ListClustersServer) error
}

// UnimplementedShipbotServer can be embedded to have forward compatible implementations.
type UnimplementedShipbotServer struct {
}

func (*UnimplementedShipbotServer) ListClusters(req *ListClustersRequest, srv Shipbot_ListClustersServer) error {
	return status.Errorf(codes.Unimplemented, "method ListClusters not implemented")
}

func RegisterShipbotServer(s *grpc.Server, srv ShipbotServer) {
	s.RegisterService(&_Shipbot_serviceDesc, srv)
}

func _Shipbot_ListClusters_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListClustersRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ShipbotServer).ListClusters(m, &shipbotListClustersServer{stream})
}

type Shipbot_ListClustersServer interface {
	Send(*ListClustersResponse) error
	grpc.ServerStream
}

type shipbotListClustersServer struct {
	grpc.ServerStream
}

func (x *shipbotListClustersServer) Send(m *ListClustersResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Shipbot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Shipbot",
	HandlerType: (*ShipbotServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListClusters",
			Handler:       _Shipbot_ListClusters_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "shipbot.proto",
}
